resource_registry:
  # Specify the relative/absolute path to the config files you want to use for override the default.
  OS::TripleO::SriovCompute::Net::SoftwareConfig: nic-configs/compute-sriov.yaml
  OS::TripleO::DpdkCompute::Net::SoftwareConfig: nic-configs/compute-dpdk.yaml
  OS::TripleO::Controller::Net::SoftwareConfig: nic-configs/controller.yaml
  OS::TripleO::NodeUserData: first-boot-sriov.yaml
  OS::TripleO::NodeUserData: first-boot-dpdk.yaml
  OS::TripleO::NodeExtraConfigPost: post-install-dpdk.yaml

parameter_defaults:
  # Customize all these values to match the local environment
  InternalApiNetCidr: 10.10.112.0/24
  TenantNetCidr: 10.10.113.0/24
  StorageNetCidr: 10.10.114.0/24
  StorageMgmtNetCidr: 10.10.115.0/24
  ExternalNetCidr: 172.16.51.0/24
  # CIDR subnet mask length for provisioning network
  ControlPlaneSubnetCidr: '24'
  InternalApiAllocationPools: [{'start': '10.10.112.100', 'end': '10.10.112.200'}]
  TenantAllocationPools: [{'start': '10.10.113.100', 'end': '10.10.113.200'}]
  StorageAllocationPools: [{'start': '10.10.114.100', 'end': '10.10.114.200'}]
  StorageMgmtAllocationPools: [{'start': '10.10.115.100', 'end': '10.10.115.200'}]
  # Use an External allocation pool which will leave room for floating IPs
  ExternalAllocationPools: [{'start': '172.16.51.50', 'end': '172.16.51.90'}]
  # Set to the router gateway on the external network
  ExternalInterfaceDefaultRoute: 172.16.51.254
  # Gateway router for the provisioning network (or Undercloud IP)
  ControlPlaneDefaultRoute: 172.16.53.31
  # Generally the IP of the Undercloud
  EC2MetadataIp: 172.16.53.31
  InternalApiNetworkVlanID: 201
  TenantNetworkVlanID: 202
  StorageNetworkVlanID: 203
  StorageMgmtNetworkVlanID: 204
  ExternalNetworkVlanID: 51
  # Define the DNS servers (maximum 2) for the overcloud nodes
  DnsServers: ["8.8.8.8","8.8.4.4"]
  # May set to br-ex if using floating IPs only on native VLAN on bridge br-ex
  NeutronExternalNetworkBridge: "''"
  # The tunnel type for the tenant network (vxlan or gre). Set to '' to disable tunneling.
  NeutronTunnelTypes: 'vxlan'
  # The tenant network type for Neutron (vlan or vxlan).
  NeutronNetworkType: 'vlan'
  # The OVS logical->physical bridge mappings to use.
  NeutronBridgeMappings: 'datacentre:br-api,dpdk_mgmt:br-link0,tenant:br-link1'
  # The Neutron ML2 and OpenVSwitch vlan mapping range to support.
  NeutronNetworkVLANRanges: 'datacentre:1:300,dpdk_mgmt:400:400,tenant:422:422,tenant:424:424'
  # Nova flavor to use.
  OvercloudControlFlavor: control
  OvercloudSriovComputeFlavor: sriovcompute
  OvercloudDpdkComputeFlavor: dpdkcompute
  #Number of nodes to deploy.
  ControllerCount: 3
  SriovComputeCount: 1
  DpdkComputeCount: 1
  # NTP server configuration.
  NtpServer: tock.stdtime.gov.tw

  # Sets overcloud nodes custom names
  # http://docs.openstack.org/developer/tripleo-docs/advanced_deployment/node_placement.html#custom-hostnames
  ControllerHostnameFormat: 'controller-%index%'
  SriovComputeHostnameFormat: 'sriovcompute-%index%'
  DpdkComputeHostnameFormat: 'dpdkcompute-%index%'
  CephStorageHostnameFormat: 'ceph-%index%'
  ObjectStorageHostnameFormat: 'swift-%index%'

  ########################
  # OVS DPDK configuration
  ## NeutronDpdkCoreList and NeutronDpdkMemoryChannels are REQUIRED settings.
  ## Attempting to deploy DPDK without appropriate values will cause deployment to fail or lead to unstable deployments.
  # List of cores to be used for DPDK Poll Mode Driver
  NeutronDpdkCoreList: "'1,21,11,31'"
  # Number of memory channels to be used for DPDK
  NeutronDpdkMemoryChannels: "4"
  # NeutronDpdkSocketMemory
  NeutronDpdkSocketMemory: "'4096,4096'"
  # NeutronDpdkDriverType
  NeutronDpdkDriverType: "vfio-pci"
  # The vhost-user socket directory for OVS
  NeutronVhostuserSocketDir: "/var/lib/vhost_sockets"

  ########################
  # Additional settings
  ########################
  # Reserved RAM for host processes
  NovaReservedHostMemory: 4096
  # A list or range of physical CPU cores to reserve for virtual machine processes.
  # Example: NovaVcpuPinSet: ['4-12','^8'] will reserve cores from 4-12 excluding 8
  NovaVcpuPinSet: "'2,3,4,5,6,7,8,9,22,23,24,25,26,27,28,29,12,13,14,15,16,17,18,19,32,33,34,35,36,37,38,39'"
  # An array of filters used by Nova to filter a node.These filters will be applied in the order they are listed,
  # so place your most restrictive filters first to make the filtering process more efficient.
  NovaSchedulerDefaultFilters: "RamFilter,ComputeFilter,AvailabilityZoneFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,PciPassthroughFilter,NUMATopologyFilter"
  # Kernel arguments for Compute node
  ComputeKernelArgs: "default_hugepagesz=1GB hugepagesz=1G hugepages=32 iommu=pt intel_iommu=on"
  # A list or range of physical CPU cores to be tuned.
  # The given args will be appended to the tuned cpu-partitioning profile.
  HostIsolatedCoreList: "'1,2,3,4,5,6,7,8,9,21,22,23,24,25,26,27,28,29,11,12,13,14,15,16,17,18,19,31,32,33,34,35,36,37,38,39'"
  # List of logical cores to be used by ovs-dpdk processess (dpdk-lcore-mask)
  HostCpusList: "'0,20,10,30'"
  NeutronSupportedPCIVendorDevs: ['8086:154d', '8086:10ed']
  NovaPCIPassthrough:
    - devname: "ens6f0"
      physical_network: "tenant"
    - devname: "ens6f1"
      physical_network: "tenant"

  NeutronPhysicalDevMappings: "tenant:ens6f0,tenant:ens6f1"
  NeutronSriovNumVFs: "ens6f0:10,ens6f1:10"
  NeutronEnableIsolatedMetadata: true
  NeutronEnableForceMetadata: true
  # Global MTU.
  NeutronGlobalPhysnetMtu: 9000
  # Configure the classname of the firewall driver to use for implementing security groups.
  NeutronOVSFirewallDriver: openvswitch
  NeutronMechanismDrivers: "openvswitch,sriovnicswitch"

  SshServerOptions:
    UseDns: 'no'
